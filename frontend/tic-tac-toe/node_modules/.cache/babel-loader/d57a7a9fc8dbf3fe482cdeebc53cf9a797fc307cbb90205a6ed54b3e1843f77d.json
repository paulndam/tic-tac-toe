{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Wise-Rock-Tech-Interview/tic-tac-toe/frontend/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport GameBoard from \"./components/game-board/GameBoard\";\nimport WelcomeModal from \"./components/welcomeModal/WelcomeModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\", {\n  path: \"/socket.io\"\n});\nfunction App() {\n  _s();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerId, setPlayerId] = useState(null);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [gameId, setGameId] = useState(\"\");\n  const [gameStarted, setGameStarted] = useState(false);\n  const [waitingForPlayer, setWaitingForPlayer] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showNotificationMessage, setNotificationMessage] = useState(\"\");\n  const [isPlayerOne, setIsPlayerOne] = useState(false);\n  const [availableGames, setAvailableGames] = useState([]);\n  const handleStartGame = () => {\n    console.log(\"===1====\");\n    if (!playerName.trim()) {\n      alert(\"Please enter a name.\");\n      return;\n    }\n    if (!playerId) {\n      setIsPlayerOne(true);\n      console.log(\"===2====\");\n      socket.emit(\"createPlayer\", {\n        name: playerName.trim()\n      });\n    }\n    // else if (!gameId) {\n    //   // setIsPlayerOne(true);\n    //   socket.emit(\"createGame\", { playerId });\n    // }\n  };\n  const handleNameChange = newName => {\n    console.log(\"----why---\");\n    setPlayerName(newName);\n  };\n  const handleGameIdChange = newGameId => {\n    setGameId(newGameId);\n  };\n  useEffect(() => {\n    const storedPlayerId = localStorage.getItem(\"playerId\");\n    const storedPlayerName = localStorage.getItem(\"playerName\");\n    const storedGameId = localStorage.getItem(\"gameId\");\n    const storedIsPlayerOne = localStorage.getItem(\"isPlayerOne\");\n    if (storedPlayerId) {\n      setPlayerId(storedPlayerId);\n      setPlayerName(storedPlayerName);\n    }\n    if (storedGameId) {\n      setGameId(storedGameId);\n      setIsPlayerOne(storedIsPlayerOne === \"true\");\n      // setGameStarted(true);\n      // If there is a stored game ID but no stored player ID, the player might have joined a game without registering\n      if (!storedPlayerId) {\n        setIsPlayerOne(false); // Ensure this user is considered as joining a game, not creating one\n      }\n    }\n    socket.on(\"playerResponse\", res => {\n      console.log(\"response from creating player ===>\", res);\n      if (res.newPlayer) {\n        const {\n          playerId,\n          name\n        } = res.newPlayer;\n        localStorage.setItem(\"playerId\", playerId);\n        localStorage.setItem(\"playerName\", name);\n        setPlayerId(playerId);\n        setPlayerName(name);\n        if (isPlayerOne) {\n          socket.emit(\"createGame\", {\n            playerId\n          });\n        }\n      }\n    });\n    socket.on(\"gameResponse\", res => {\n      console.log(\"response from creating game ===>\", res);\n      if (res.newGame) {\n        const {\n          gameId\n        } = res.newGame;\n        localStorage.setItem(\"gameId\", gameId);\n        localStorage.setItem(\"isPlayerOne\", \"true\");\n        setGameId(gameId);\n        setGameStarted(true);\n        setIsPlayerOne(true);\n      }\n    });\n    socket.on(\"allGames\", games => {\n      console.log(\"=== response listing all games =====>\", games);\n      setAvailableGames(games);\n    });\n    socket.on(\"gameJoined\", res => {\n      console.log(\"==== response joining game ======\", res);\n      if (!isPlayerOne) {\n        localStorage.setItem(\"gameId\", res.updateGame.gameId); // Assuming 'res' has gameId\n        localStorage.setItem(\"isPlayerOne\", \"false\");\n      }\n      setGameStarted(true);\n      setWaitingForPlayer(false);\n      setNotificationMessage(\"Player Two has joined the game\");\n    });\n    socket.on(\"gameUpdate\", game => {\n      setBoard(game.board);\n      //TO DO: Handle other game updates like current turn, game status, etc.\n    });\n    socket.on(\"playerResponse\", error => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n    socket.on(\"gameResponse\", error => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n    return () => {\n      socket.off(\"playerResponse\");\n      socket.off(\"gameCreated\");\n      socket.off(\"gameJoined\");\n      socket.off(\"gameUpdate\");\n    };\n  }, [playerId, gameId, isPlayerOne, playerName]);\n  const createGame = () => {\n    if (playerId) {\n      socket.emit(\"createGame\", {\n        playerId\n      });\n      setWaitingForPlayer(true);\n    } else {\n      setErrorMessage(\"You must be registered to create a game\");\n    }\n  };\n  const createPlayerAndJoinGame = () => {\n    if (playerName.trim() && gameId.trim()) {\n      if (!playerId) {\n        socket.emit(\"createPlayer\", {\n          name: playerName.trim()\n        });\n      } else {\n        socket.emit(\"joinGame\", {\n          gameId,\n          playerId\n        });\n      }\n      // socket.emit(\"joinGame\", { playerId,gameId });\n      // setIsPlayerOne(false);\n    } else {\n      setErrorMessage(\"Please enter your name and a valid game ID to join.\");\n    }\n  };\n\n  // Function to join an existing game\n  const joinGame = gameId => {\n    if (!playerId) {\n      alert(\"Please create a player first.\");\n      return;\n    }\n    socket.emit(\"joinGame\", {\n      gameId,\n      playerId\n    });\n  };\n  const makeMove = position => {\n    socket.emit(\"makeMove\", {\n      playerId,\n      gameId,\n      position\n    });\n  };\n  console.log(\"===== is player one =======>\", isPlayerOne);\n  const logOut = () => {\n    localStorage.removeItem(\"playerId\");\n    setPlayerId(null);\n    // setGameStarted(false)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 24\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(WelcomeModal, {\n      playerName: playerName,\n      onNameChange: handleNameChange,\n      onStart: handleStartGame,\n      gameId: gameId,\n      setGameId: handleGameIdChange,\n      isPlayerOne: isPlayerOne,\n      availableGames: availableGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tic-Tac-Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome \", playerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), waitingForPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting for Player Two to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 32\n      }, this), gameStarted && /*#__PURE__*/_jsxDEV(GameBoard, {\n        board: board,\n        onMakeMove: makeMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 27\n      }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Game started! Your game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 27\n      }, this), !gameStarted && isPlayerOne && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createGame,\n          children: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Share game ID with Player Two: \", gameId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true), !gameStarted && !isPlayerOne && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: gameId,\n          onChange: e => setGameId(e.target.value),\n          placeholder: \"enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createPlayerAndJoinGame,\n          children: \"Join Game1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"log-out-btn\",\n        onClick: logOut,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NEVng9BOkRaioi1VfzF7G/DMBGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","GameBoard","WelcomeModal","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","path","App","_s","playerName","setPlayerName","playerId","setPlayerId","board","setBoard","Array","fill","gameId","setGameId","gameStarted","setGameStarted","waitingForPlayer","setWaitingForPlayer","errorMessage","setErrorMessage","showNotificationMessage","setNotificationMessage","isPlayerOne","setIsPlayerOne","availableGames","setAvailableGames","handleStartGame","console","log","trim","alert","emit","name","handleNameChange","newName","handleGameIdChange","newGameId","storedPlayerId","localStorage","getItem","storedPlayerName","storedGameId","storedIsPlayerOne","on","res","newPlayer","setItem","newGame","games","updateGame","game","error","type","message","off","createGame","createPlayerAndJoinGame","joinGame","makeMove","position","logOut","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNameChange","onStart","onMakeMove","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/paulndam/Documents/Wise-Rock-Tech-Interview/tic-tac-toe/frontend/tic-tac-toe/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport GameBoard from \"./components/game-board/GameBoard\";\nimport WelcomeModal from \"./components/welcomeModal/WelcomeModal\";\n\nconst socket = io(\"http://localhost:8080\", {\n  path: \"/socket.io\",\n});\n\nfunction App() {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerId, setPlayerId] = useState(null);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [gameId, setGameId] = useState(\"\");\n  const [gameStarted, setGameStarted] = useState(false);\n  const [waitingForPlayer, setWaitingForPlayer] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showNotificationMessage, setNotificationMessage] = useState(\"\");\n  const [isPlayerOne, setIsPlayerOne] = useState(false);\n  const [availableGames, setAvailableGames] = useState([]);\n\n  const handleStartGame = () => {\n    console.log(\"===1====\")\n\n    if (!playerName.trim()) {\n      alert(\"Please enter a name.\");\n      return;\n    }\n\n    if (!playerId) {\n      setIsPlayerOne(true)\n      console.log(\"===2====\")\n      socket.emit(\"createPlayer\", {\n        name: playerName.trim(),\n      });\n    } \n    // else if (!gameId) {\n    //   // setIsPlayerOne(true);\n    //   socket.emit(\"createGame\", { playerId });\n    // }\n  };\n\n\n  const handleNameChange = (newName) => {\n    console.log(\"----why---\")\n    setPlayerName(newName);\n  };\n\n  const handleGameIdChange = (newGameId) => {\n    setGameId(newGameId);\n  };\n\n\n\n  useEffect(() => {\n    const storedPlayerId = localStorage.getItem(\"playerId\");\n    const storedPlayerName = localStorage.getItem(\"playerName\");\n    const storedGameId = localStorage.getItem(\"gameId\");\n    const storedIsPlayerOne = localStorage.getItem(\"isPlayerOne\");\n\n    if (storedPlayerId) {\n      setPlayerId(storedPlayerId);\n      setPlayerName(storedPlayerName);\n    }\n\n    if (storedGameId) {\n      setGameId(storedGameId);\n      setIsPlayerOne(storedIsPlayerOne === \"true\");\n      // setGameStarted(true);\n      // If there is a stored game ID but no stored player ID, the player might have joined a game without registering\n      if (!storedPlayerId) {\n        setIsPlayerOne(false); // Ensure this user is considered as joining a game, not creating one\n      }\n    }\n\n    socket.on(\"playerResponse\", (res) => {\n      console.log(\"response from creating player ===>\", res);\n      if (res.newPlayer) {\n        const { playerId, name } = res.newPlayer;\n        localStorage.setItem(\"playerId\", playerId);\n        localStorage.setItem(\"playerName\", name);\n        setPlayerId(playerId);\n        setPlayerName(name);\n\n        if (isPlayerOne) {\n          socket.emit(\"createGame\", { playerId });\n        }\n      }\n    });\n\n    socket.on(\"gameResponse\", (res) => {\n      console.log(\"response from creating game ===>\", res);\n\n      if (res.newGame) {\n        const { gameId } = res.newGame;\n        localStorage.setItem(\"gameId\", gameId);\n        localStorage.setItem(\"isPlayerOne\", \"true\");\n        setGameId(gameId);\n        setGameStarted(true);\n        setIsPlayerOne(true);\n      }\n    });\n\n    socket.on(\"allGames\", (games) => {\n      console.log(\"=== response listing all games =====>\", games);\n      setAvailableGames(games);\n    });\n\n    socket.on(\"gameJoined\", (res) => {\n      console.log(\"==== response joining game ======\", res);\n      if (!isPlayerOne) {\n        localStorage.setItem(\"gameId\", res.updateGame.gameId); // Assuming 'res' has gameId\n        localStorage.setItem(\"isPlayerOne\", \"false\");\n      }\n      setGameStarted(true);\n      setWaitingForPlayer(false);\n      setNotificationMessage(\"Player Two has joined the game\");\n    });\n\n    socket.on(\"gameUpdate\", (game) => {\n      setBoard(game.board);\n      //TO DO: Handle other game updates like current turn, game status, etc.\n    });\n\n    socket.on(\"playerResponse\", (error) => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n\n    socket.on(\"gameResponse\", (error) => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n\n    return () => {\n      socket.off(\"playerResponse\");\n      socket.off(\"gameCreated\");\n      socket.off(\"gameJoined\");\n      socket.off(\"gameUpdate\");\n    };\n  }, [playerId, gameId, isPlayerOne,playerName]);\n\n  const createGame = () => {\n    if (playerId) {\n      socket.emit(\"createGame\", { playerId });\n      setWaitingForPlayer(true);\n    } else {\n      setErrorMessage(\"You must be registered to create a game\");\n    }\n  };\n\n  const createPlayerAndJoinGame = () => {\n    if (playerName.trim() && gameId.trim()) {\n      if (!playerId) {\n        socket.emit(\"createPlayer\", { name: playerName.trim() });\n      } else {\n        socket.emit(\"joinGame\", { gameId, playerId });\n      }\n      // socket.emit(\"joinGame\", { playerId,gameId });\n      // setIsPlayerOne(false);\n    } else {\n      setErrorMessage(\"Please enter your name and a valid game ID to join.\");\n    }\n  };\n\n  // Function to join an existing game\n  const joinGame = (gameId) => {\n    if (!playerId) {\n      alert(\"Please create a player first.\");\n      return;\n    }\n    socket.emit(\"joinGame\", { gameId, playerId });\n  };\n\n  const makeMove = (position) => {\n    socket.emit(\"makeMove\", { playerId, gameId, position });\n  };\n\n  console.log(\"===== is player one =======>\", isPlayerOne);\n\n\n  const logOut = () => {\n    localStorage.removeItem(\"playerId\");\n    setPlayerId(null);\n    // setGameStarted(false)\n  };\n\n  return (\n    <div className=\"App\">\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n      {!gameStarted ? (\n        <WelcomeModal\n          playerName={playerName}\n          onNameChange={handleNameChange}\n          onStart={handleStartGame}\n          gameId={gameId}\n          setGameId={handleGameIdChange}\n          isPlayerOne={isPlayerOne}\n          availableGames={availableGames}\n        />\n      ) : (\n        <>\n          <div className=\"header\">\n            <h1>Tic-Tac-Toe</h1>\n            <h2>Welcome {playerName}</h2>\n          </div>\n\n          {waitingForPlayer && <div>Waiting for Player Two to join...</div>}\n\n          {gameStarted && <GameBoard board={board} onMakeMove={makeMove} />}\n\n          {gameStarted && <div>Game started! Your game ID: {gameId}</div>}\n\n          {!gameStarted && isPlayerOne && (\n            <>\n              <button onClick={createGame}>Create Game</button>\n              {gameId && <div>Share game ID with Player Two: {gameId}</div>}\n            </>\n          )}\n\n          {!gameStarted && !isPlayerOne && (\n            <>\n              <input\n                type=\"text\"\n                value={gameId}\n                onChange={(e) => setGameId(e.target.value)}\n                placeholder=\"enter your name\"\n              />\n              <button onClick={createPlayerAndJoinGame}>Join Game1</button>\n            </>\n          )}\n\n          <button className=\"log-out-btn\" onClick={logOut}>\n            Log Out\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
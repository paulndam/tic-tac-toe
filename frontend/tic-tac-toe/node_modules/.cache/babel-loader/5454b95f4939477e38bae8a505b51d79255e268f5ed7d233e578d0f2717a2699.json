{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/Wise-Rock-Tech-Interview/tic-tac-toe/frontend/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport GameBoard from \"./components/game-board/GameBoard\";\nimport WelcomeModal from \"./components/welcomeModal/WelcomeModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:8080\", {\n  path: \"/socket.io\"\n});\nfunction App() {\n  _s();\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerId, setPlayerId] = useState(null);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [gameId, setGameId] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [waitingForPlayer, setWaitingForPlayer] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showNotificationMessage, setNotificationMessage] = useState(\"\");\n  const [isPlayerOne, setIsPlayerOne] = useState(false);\n  const [availableGames, setAvailableGames] = useState([]);\n  const handleNameChange = name => {\n    setPlayerName(name);\n  };\n  const handleStartGame = () => {\n    if (playerName.trim()) {\n      if (!playerId) {\n        socket.emit(\"createPlayer\", {\n          name: playerName.trim()\n        });\n      }\n      if (isPlayerOne) {\n        socket.emit('createGame', {\n          playerId\n        });\n      }\n\n      // setIsPlayerOne(true);\n      setErrorMessage(\"\");\n    } else {\n      alert(\"Please enter a name.\");\n    }\n  };\n  const logOut = () => {\n    localStorage.removeItem(\"playerId\");\n    setPlayerId(null);\n  };\n  useEffect(() => {\n    // When player ID or game state changes, update Local Storage\n    localStorage.setItem('playerId', playerId);\n    localStorage.setItem('playerName', playerName);\n    localStorage.setItem('gameId', gameId);\n    localStorage.setItem('isPlayerOne', isPlayerOne.toString());\n  }, [isPlayerOne, gameId, playerName]);\n  useEffect(() => {\n    const storedPlayerId = localStorage.getItem(\"playerId\");\n    const storedPlayerName = localStorage.getItem(\"playerName\");\n    const storedGameId = localStorage.getItem(\"gameId\");\n    const storedIsPlayerOne = localStorage.getItem(\"isPlayerOne\");\n    if (storedPlayerId && storedPlayerName) {\n      setPlayerId(storedPlayerId);\n      setPlayerName(storedPlayerName);\n    }\n    if (storedGameId) {\n      setGameId(storedGameId);\n      setIsPlayerOne(storedIsPlayerOne === 'true');\n      // setGameStarted(true);  \n      // If there is a stored game ID but no stored player ID, the player might have joined a game without registering\n      if (!storedPlayerId) {\n        setIsPlayerOne(false); // Ensure this user is considered as joining a game, not creating one\n      }\n    }\n    socket.on(\"playerResponse\", res => {\n      console.log(\"response from socket ====>\", res);\n      if (res.newPlayer) {\n        localStorage.setItem(\"playerId\", res.newPlayer.playerId);\n        localStorage.setItem(\"playerName\", res.newPlayer.name);\n        setPlayerId(res.newPlayer.playerId);\n        setPlayerName(res.newPlayer.name);\n        // setIsPlayerOne(true)\n      }\n    });\n    socket.on(\"gameCreated\", res => {\n      console.log(\"response from creating game ====>\", res);\n      if (res.newGame) {\n        localStorage.setItem(\"gameId\", res.newGame.gameId);\n        localStorage.setItem(\"isPlayerOne\", 'true');\n        setGameId(res.newGame.gameId);\n        setGameStarted(true);\n        setWaitingForPlayer(false);\n        setIsPlayerOne(true);\n      }\n    });\n    socket.on(\"allGames\", games => {\n      console.log(\"=== response listing all games =====>\", games);\n      setAvailableGames(games);\n    });\n    socket.on(\"playerCreated\", res => {\n      if (!playerId && res.newPlayer.playerId) {\n        setPlayerId(res.playerId);\n        localStorage.setItem(res.newPlayer.playerId);\n        localStorage.setItem(res.newPlayer.name);\n        if (!isPlayerOne) {\n          socket.emit(\"joinGame\", {\n            gameId,\n            playerId: res.newPlayer.playerId\n          });\n        }\n      }\n    });\n    socket.on(\"gameJoined\", res => {\n      console.log(\"==== response joining game ======\", res);\n      if (!isPlayerOne) {\n        localStorage.setItem(\"gameId\", res.updateGame.gameId); // Assuming 'res' has gameId\n        localStorage.setItem(\"isPlayerOne\", 'false');\n      }\n      setGameStarted(true);\n      setWaitingForPlayer(false);\n      setNotificationMessage(\"Player Two has joined the game\");\n    });\n    socket.on(\"gameUpdate\", game => {\n      setBoard(game.board);\n      //TO DO: Handle other game updates like current turn, game status, etc.\n    });\n    socket.on(\"playerResponse\", error => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n    socket.on(\"gameResponse\", error => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n    return () => {\n      socket.off(\"playerResponse\");\n      socket.off(\"gameCreated\");\n      socket.off(\"gameJoined\");\n      socket.off(\"gameUpdate\");\n    };\n  }, [playerId, gameId, isPlayerOne, playerName]);\n  const createGame = () => {\n    if (playerId) {\n      socket.emit(\"createGame\", {\n        playerId\n      });\n      setWaitingForPlayer(true);\n    } else {\n      setErrorMessage(\"You must be registered to create a game\");\n    }\n  };\n  const createPlayerAndJoinGame = () => {\n    if (playerName.trim() && gameId.trim()) {\n      if (!playerId) {\n        socket.emit(\"createPlayer\", {\n          name: playerName.trim()\n        });\n      } else {\n        socket.emit(\"joinGame\", {\n          gameId,\n          playerId\n        });\n      }\n      // socket.emit(\"joinGame\", { playerId,gameId });\n      // setIsPlayerOne(false);\n    } else {\n      setErrorMessage(\"Please enter your name and a valid game ID to join.\");\n    }\n  };\n  const makeMove = position => {\n    socket.emit(\"makeMove\", {\n      playerId,\n      gameId,\n      position\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 24\n    }, this), !playerId ? /*#__PURE__*/_jsxDEV(WelcomeModal, {\n      playerName: playerName,\n      onNameChange: handleNameChange,\n      onStart: handleStartGame\n      // onStart={isPlayerOne ? handleStartGame : createPlayerAndJoinGame}\n      ,\n      gameId: gameId,\n      setGameId: setGameId // for updating gameId in WelcomeModal\n      ,\n      isPlayerOne: isPlayerOne,\n      availableGames: availableGames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tic-Tac-Toe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Welcome \", playerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), waitingForPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Waiting for Player Two to join...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 32\n      }, this), gameStarted && /*#__PURE__*/_jsxDEV(GameBoard, {\n        board: board,\n        onMakeMove: makeMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 27\n      }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Game started! Your game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }, this), !gameStarted && isPlayerOne && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createGame,\n          children: \"Create Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Share game ID with Player Two: \", gameId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true), !gameStarted && !isPlayerOne && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: gameId,\n          onChange: e => setGameId(e.target.value),\n          placeholder: \"enter your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createPlayerAndJoinGame,\n          children: \"Join Game1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"log-out-btn\",\n        onClick: logOut,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YkLe+gIa2KqW0ZpA5isR3E6GgL8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","GameBoard","WelcomeModal","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","path","App","_s","playerName","setPlayerName","playerId","setPlayerId","board","setBoard","Array","fill","gameId","setGameId","gameStarted","setGameStarted","waitingForPlayer","setWaitingForPlayer","errorMessage","setErrorMessage","showNotificationMessage","setNotificationMessage","isPlayerOne","setIsPlayerOne","availableGames","setAvailableGames","handleNameChange","name","handleStartGame","trim","emit","alert","logOut","localStorage","removeItem","setItem","toString","storedPlayerId","getItem","storedPlayerName","storedGameId","storedIsPlayerOne","on","res","console","log","newPlayer","newGame","games","updateGame","game","error","type","message","off","createGame","createPlayerAndJoinGame","makeMove","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNameChange","onStart","onMakeMove","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/paulndam/Documents/Wise-Rock-Tech-Interview/tic-tac-toe/frontend/tic-tac-toe/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport GameBoard from \"./components/game-board/GameBoard\";\nimport WelcomeModal from \"./components/welcomeModal/WelcomeModal\";\n\nconst socket = io(\"http://localhost:8080\", {\n  path: \"/socket.io\",\n});\n\nfunction App() {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [playerId, setPlayerId] = useState(null);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [gameId, setGameId] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [waitingForPlayer, setWaitingForPlayer] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showNotificationMessage, setNotificationMessage] = useState(\"\");\n  const [isPlayerOne, setIsPlayerOne] = useState(false);\n  const [availableGames,setAvailableGames] = useState([]);\n\n\n  const handleNameChange = (name) => {\n    setPlayerName(name);\n  };\n\n  const handleStartGame = () => {\n    if (playerName.trim()) {\n\n      if(!playerId){\n        socket.emit(\"createPlayer\", {\n          name: playerName.trim(),\n        });\n      }\n\n      if(isPlayerOne){\n        socket.emit('createGame', { playerId });\n      }\n      \n      // setIsPlayerOne(true);\n      setErrorMessage(\"\");\n    } else {\n      alert(\"Please enter a name.\");\n    }\n  };\n\n  const logOut = () => {\n    localStorage.removeItem(\"playerId\");\n    setPlayerId(null);\n  };\n\n  useEffect(() => {\n    // When player ID or game state changes, update Local Storage\n    localStorage.setItem('playerId', playerId);\n    localStorage.setItem('playerName', playerName);\n    localStorage.setItem('gameId', gameId);\n    localStorage.setItem('isPlayerOne', isPlayerOne.toString());\n}, [isPlayerOne,gameId,playerName]);\n\n\n  useEffect(() => {\n    const storedPlayerId = localStorage.getItem(\"playerId\");\n    const storedPlayerName = localStorage.getItem(\"playerName\");\n    const storedGameId = localStorage.getItem(\"gameId\");\n    const storedIsPlayerOne = localStorage.getItem(\"isPlayerOne\")\n\n    \n\n    if (storedPlayerId && storedPlayerName) {\n      setPlayerId(storedPlayerId);\n      setPlayerName(storedPlayerName);\n    }\n\n    if (storedGameId) {\n      setGameId(storedGameId);\n      setIsPlayerOne(storedIsPlayerOne === 'true');\n      // setGameStarted(true);  \n      // If there is a stored game ID but no stored player ID, the player might have joined a game without registering\n      if (!storedPlayerId) {\n        setIsPlayerOne(false); // Ensure this user is considered as joining a game, not creating one\n      }\n    }\n\n    socket.on(\"playerResponse\", (res) => {\n      console.log(\"response from socket ====>\", res);\n      if (res.newPlayer) {\n        localStorage.setItem(\"playerId\", res.newPlayer.playerId);\n        localStorage.setItem(\"playerName\", res.newPlayer.name);\n        setPlayerId(res.newPlayer.playerId);\n        setPlayerName(res.newPlayer.name);\n        // setIsPlayerOne(true)\n      }\n    });\n\n    socket.on(\"gameCreated\", (res) => {\n      console.log(\"response from creating game ====>\", res);\n      if (res.newGame) {\n        localStorage.setItem(\"gameId\", res.newGame.gameId);\n        localStorage.setItem(\"isPlayerOne\", 'true');\n        setGameId(res.newGame.gameId);\n        setGameStarted(true);\n        setWaitingForPlayer(false);\n        setIsPlayerOne(true);\n      }\n    });\n\n    socket.on(\"allGames\",(games) => {\n      console.log(\"=== response listing all games =====>\",games)\n      setAvailableGames(games)\n    })\n\n    socket.on(\"playerCreated\", (res) => {\n      if(!playerId && res.newPlayer.playerId){\n        setPlayerId(res.playerId);\n        localStorage.setItem(res.newPlayer.playerId)\n        localStorage.setItem(res.newPlayer.name)\n\n        if(!isPlayerOne){\n          socket.emit(\"joinGame\",{gameId,playerId:res.newPlayer.playerId})\n        }\n      }\n    })\n\n    socket.on(\"gameJoined\", (res) => {\n      console.log(\"==== response joining game ======\",res)\n      if (!isPlayerOne) {\n        localStorage.setItem(\"gameId\", res.updateGame.gameId); // Assuming 'res' has gameId\n        localStorage.setItem(\"isPlayerOne\", 'false');\n      }\n      setGameStarted(true);\n      setWaitingForPlayer(false);\n      setNotificationMessage(\"Player Two has joined the game\");\n    });\n\n    socket.on(\"gameUpdate\", (game) => {\n      setBoard(game.board);\n      //TO DO: Handle other game updates like current turn, game status, etc.\n    });\n\n    socket.on(\"playerResponse\", (error) => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n\n    socket.on(\"gameResponse\", (error) => {\n      if (error.type === \"error\") {\n        setErrorMessage(error.message);\n      }\n    });\n\n    return () => {\n      socket.off(\"playerResponse\");\n      socket.off(\"gameCreated\");\n      socket.off(\"gameJoined\");\n      socket.off(\"gameUpdate\");\n    };\n  }, [playerId,gameId,isPlayerOne,playerName]);\n\n  \n\n  const createGame = () => {\n    if (playerId) {\n      socket.emit(\"createGame\", { playerId });\n      setWaitingForPlayer(true);\n    } else {\n      setErrorMessage(\"You must be registered to create a game\");\n    }\n  };\n\n  const createPlayerAndJoinGame = () => {\n    if (playerName.trim() && gameId.trim()) {\n      if(!playerId){\n        socket.emit(\"createPlayer\", { name: playerName.trim() });\n      }else{\n        socket.emit(\"joinGame\", {gameId,playerId });\n      }\n      // socket.emit(\"joinGame\", { playerId,gameId });\n      // setIsPlayerOne(false);\n    } else {\n      \n      setErrorMessage(\"Please enter your name and a valid game ID to join.\");\n    }\n  };\n\n  const makeMove = (position) => {\n    socket.emit(\"makeMove\", { playerId, gameId, position });\n  };\n\n  return (\n    <div className=\"App\">\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n      {!playerId ? (\n        <WelcomeModal\n          playerName={playerName}\n          onNameChange={handleNameChange}\n          onStart={handleStartGame}\n          // onStart={isPlayerOne ? handleStartGame : createPlayerAndJoinGame}\n          gameId={gameId}\n          setGameId={setGameId} // for updating gameId in WelcomeModal\n          isPlayerOne={isPlayerOne}\n          availableGames={availableGames}\n        />\n      ) : (\n        <>\n          <div className=\"header\">\n            <h1>Tic-Tac-Toe</h1>\n            <h2>Welcome {playerName}</h2>\n          </div>\n\n          {waitingForPlayer && <div>Waiting for Player Two to join...</div>}\n\n          {gameStarted && <GameBoard board={board} onMakeMove={makeMove} />}\n\n          {gameStarted && <div>Game started! Your game ID: {gameId}</div>}\n\n          {!gameStarted && isPlayerOne && (\n            <>\n              <button onClick={createGame}>Create Game</button>\n              {gameId && <div>Share game ID with Player Two: {gameId}</div>}\n            </>\n          )}\n\n          {!gameStarted && !isPlayerOne && (\n            <>\n              <input\n                type=\"text\"\n                value={gameId}\n                onChange={(e) => setGameId(e.target.value)}\n                placeholder=\"enter your name\"\n              />\n              <button onClick={createPlayerAndJoinGame}>Join Game1</button>\n            </>\n          )}\n\n          <button className=\"log-out-btn\" onClick={logOut}>\n            Log Out\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}